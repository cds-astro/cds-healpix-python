# Largely inspired from https://github.com/messense/crfs-rs/blob/main/.github/workflows/Python.yml

name: "Create, test and possibly push cdshealpix python wheels"

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      # See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
      # run all matrix jobs even if on is failling (default behaviour is to stop all jobs)
      fail-fast: false
      matrix:
        #python-version: ['3.7', '3.8', '3.9', '3.10', '3.11-dev']
        python-version: ['3.8']
    steps:
      # Checkout the project
      - name: "Checkout branch ${{ github.head_ref }}"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # Set up python, see https://docs.github.com/en/actions/guides/building-and-testing-python  
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          id: py
          python-version: ${{ matrix.python-version }}
          architecture: x64
      # Install rust, see https://github.com/actions-rs/toolchain
      - name: "Install Rust toolchain"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      # Build wheels with maturin, see https://github.com/messense/maturin-action
      - name: "Build wheel - x86_64"
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          target: x86_64
          args: -i ${{ steps.py.outputs.python-path }} --release --out dist
      - name: "Install built wheel and test it - x86_64"
        run: |
          # Install dependencies for tests
          pip install -r requirements-dev.txt
          # Install local wheel
          pip install cdshealpix --no-index --find-links dist --force-reinstall
          # Check import is ok
          python -c "import cdshealpix"
          # Run test
          python -m pytest -v -s cdshealpix/tests/test_nested_healpix.py
          python -m pytest -v -s cdshealpix/tests/test_ring_healpix.py
      - name: "Build wheel - universal2"
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          target: x86_64
          args: --release --universal2 --out dist
      - name: "Install built wheel and test - universal2"
        run: |
          # Install dependencies for tests
          pip install -r requirements-dev.txt
          # Install local wheel
          pip install cdshealpix --no-index --find-links dist --force-reinstall
          # Check import is ok
          python -c "import cdshealpix"
          # Run test
          python -m pytest -v -s cdshealpix/tests/test_nested_healpix.py
          python -m pytest -v -s cdshealpix/tests/test_ring_healpix.py
      # Upload artifac in "dist" repo, see https://github.com/actions/upload-artifact
      # more info here: https://github.com/actions/upload-artifact
      - name: "Upload wheels"
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          retention-days: 1

  windows:
    runs-on: windows-latest
    strategy:
      # See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
      # run all matrix jobs even if on is failling (default behaviour is to stop all jobs)
      fail-fast: false      
      matrix:
        target: [x64, x86]
        #python-version: ['3.7', '3.8', '3.9', '3.10', '3.11-dev']
        python-version: ['3.8']
    steps:
      # Checkout the project
      - name: "Checkout branch ${{ github.head_ref }}"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # Set up python, see https://docs.github.com/en/actions/guides/building-and-testing-python  
      - name: "Set up Python - ${{ matrix.python-version }} - ${{ matrix.target }}"
        uses: actions/setup-python@v4
        id: py
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      # Install rust, see https://github.com/actions-rs/toolchain
      - name: "Install Rust toolchain"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      # Build wheels with maturin, see https://github.com/messense/maturin-action
      - name: "Build wheel - ${{ matrix.python-version }} - ${{ matrix.target }}"
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          target: ${{ matrix.target }}
          args: -i ${{ steps.py.outputs.python-path }} --release --out dist
      - name: "Install built wheel and test it - ${{ matrix.python-version }} - ${{ matrix.target }}"
        run: |
          # Install dependencies for tests
          pip install -r requirements-dev.txt
          # Install local wheel
          pip install cdshealpix --no-index --find-links dist --force-reinstall
          # Check import is ok
          python -c "import cdshealpix"
          # Run test
          python -m pytest -v -s "cdshealpix\tests\test_nested_healpix.py"
          python -m pytest -v -s "cdshealpix\tests\test_ring_healpix.py"
      # Upload artifac in "dist" repo, see https://github.com/actions/upload-artifact
      # more info here: https://github.com/actions/upload-artifact
      - name: "Upload wheels"
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          retention-days: 1


  linux:
    runs-on: ubuntu-latest
    # See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
    # run all matrix jobs even if on is failling (default behaviour is to stop all jobs)
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, i686]
        #python-version: ['3.7', '3.8', '3.9', '3.10', '3.11-dev']
        python-version: ['3.8']
    steps:
      # Checkout the project
      - name: "Checkout branch ${{ github.head_ref }}"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # Set up python, see https://docs.github.com/en/actions/guides/building-and-testing-python  
      - name: "Set up Python - ${{ matrix.python-version }} - ${{ matrix.target }}"
        uses: actions/setup-python@v4
        id: py
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      # Build wheels with maturin, see https://github.com/messense/maturin-action
      - name: "Build wheels - ${{ matrix.python-version }} - ${{ matrix.target }}"
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build      
          target: ${{ matrix.target }}
          manylinux: auto
          args: -i ${{ steps.py.outputs.python-path }} --release --out dist
      - name: "Install built wheel and test it - ${{ matrix.python-version }} - ${{ matrix.target }}" 
        if: matrix.target == 'x86_64'
        run: |
          # Install dependencies for tests
          pip install -r requirements-dev.txt
          # Install local wheel
          pip install cdshealpix --no-index --find-links dist --force-reinstall
          # Check import is ok
          python -c "import cdshealpix"
          # Run test
          python -m pytest -v -s cdshealpix/tests/test_nested_healpix.py
          python -m pytest -v -s cdshealpix/tests/test_ring_healpix.py
      # Upload artifac in "dist" repo, see https://github.com/actions/upload-artifact
      # more info here: https://github.com/actions/upload-artifact
      - name: "Upload wheels"
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          retention-days: 1

  linux-cross:
    runs-on: ubuntu-latest
    # See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
    # run all matrix jobs even if on is failling (default behaviour is to stop all jobs)
    strategy:
      fail-fast: false
      matrix:
        #target: [aarch64, armv7, s390x, ppc64le, ppc64]
        target: [aarch64, armv7]
        #python-version: ['3.7', '3.8', '3.9', '3.10', '3.11-dev']
        python-version: ['3.8']
    steps:
      # Checkout the project
      - name: "Checkout branch ${{ github.head_ref }}"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # Set up python, see https://docs.github.com/en/actions/guides/building-and-testing-python  
      - name: "Set up Python - ${{ matrix.python-version }} - ${{ matrix.target }}"
        uses: actions/setup-python@v4
        id: py
        with:
          python-version: ${{ matrix.python-version }}
      # Build wheels with maturin, see https://github.com/messense/maturin-action
      - name: "Build wheels - ${{ matrix.python-version }} - ${{ matrix.target }}"
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          target: ${{ matrix.target }}
          manylinux: auto
          args: -i ${{ steps.py.outputs.python-path }} --release --out dist
      # Executes commands on non-x86 CPU architecture, https://github.com/uraimo/run-on-arch-action
      - uses: uraimo/run-on-arch-action@v2.0.5
        if: matrix.target != 'ppc64'
        name: "Install built wheel and test it - ${{ matrix.python-version }} - ${{ matrix.target }}"
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            # Install dependencies for tests
            pip3 install -r requirements-dev.txt
            # Install local wheel
            pip3 install cdshealpix --no-index --find-links dist --force-reinstall
            # Check import is ok
            python3 -c "import cdshealpix"
            # Run test
            python3 -m pytest -v -s cdshealpix/tests/test_nested_healpix.py
            python3 -m pytest -v -s cdshealpix/tests/test_ring_healpix.py
      # Upload artifac in "dist" repo, see https://github.com/actions/upload-artifact
      # more info here: https://github.com/actions/upload-artifact
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          retention-days: 1


