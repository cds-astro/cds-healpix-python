# Enrich using https://www.maturin.rs/metadata.html
[project]
name = "cdshealpix"
requires-python = ">=3.8"
dependencies = [
    "astropy<5.3; python_version == '3.8'",
    "astropy; python_version > '3.8'"
]
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
description = "A healpix manipulation library."
readme = "README.md"
keywords = ["astronomy", "healpix"]

[project.optional-dependencies]
plot = ["matplotlib"]

[project.urls]
repository = "https://github.com/cds-astro/cds-healpix-python"
documentation = "https://cds-astro.github.io/cds-healpix-python/"
issues = "https://github.com/cds-astro/cds-healpix-python/issues"
changelog = "https://github.com/cds-astro/cds-healpix-python/blob/master/CHANGELOG.md"


# Build a cdshealpix-x.x.x.tar.gz containing sources (from maturin).
[build-system]
requires = ["maturin>=0.13"]
build-backend = "maturin"

[tool.maturin]
# See https://github.com/PyO3/maturin#mixed-rustpython-projects
# "to avoid the  a common ImportError pitfall"
python-source = "python"
# Bindings type
bindings = "pyo3"
# Strip the library for minimum file size
strip = true
# Build artifacts with the specified Cargo profile
profile = "release"
# Cargo manifest path
# manifest-path = "Cargo.toml"
# Require Cargo.lock and cache are up to date
frozen = false
# Require Cargo.lock is up to date
locked = false

[tool.ruff]
fix = true
force-exclude = true
output-format = "grouped"
show-source = true
ignore-init-module-imports = true
target-version = "py37"
extend-select = ["SIM", "D", "UP", "N", "S", "B", "A", "C4", "ICN", "RET", "ARG", "PGH", "RUF"]
extend-ignore = ["E501"]
# E501: line length (done by black in our case)
exclude = ["conf.py"]
extend-include = ["*.ipynb"]

[tool.ruff.per-file-ignores]
# D100: Missing docstring in public module
# D103: Missing docstring in public function
# D104: Missing docstring in public package
# S101: Use of `assert` detected
"__init__.py" = ["D104"]
"version.py" = ["D100"]
"test_*.py" = ["D103", "D100", "S101"]
"notebooks*" = ["D100"]
"conftest.py" = ["D100"]

[tool.ruff.flake8-errmsg]
max-string-length = 20

[tool.ruff.pydocstyle]
convention = "numpy"  # Accepts: "google", "numpy", or "pep257"

[tool.pytest.ini_options]
addopts = "--doctest-modules --ignore-glob=python/cdshealpix/tests/test_bench*"
doctest_optionflags = "NORMALIZE_WHITESPACE"
testpaths = "python"